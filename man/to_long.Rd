% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_long.R
\name{to_long}
\alias{to_long}
\title{Convert wide format weather data to long format}
\usage{
to_long(data, keep_cols = 1, date_sep = "_")
}
\arguments{
\item{data}{wide format data}

\item{keep_cols}{columns in \code{data} to retain in long format; all other
columns will be converted to key/value pairs in long format; defaults to 1.
This should most likely correspond to the index of the column containing the
site unique identifier}

\item{date_sep}{character used to delimit variable prefix from date in
column names; defaults to underscore ("_")}
}
\value{
data frame where each row corresponds to an observation for a single
day. Measurements are in the column \code{value} and date is in the column
\code{date}. Measurements retain the class of original data, and date is of
class \code{\link[base]{Date}}.
}
\description{
\code{to_long} transforms wide-formatted data, where each
column respresents an observation for a specific day for a specific site, to
wide-formatted data, where each row corresponds to an observation for a
single day for a specific site.
}
\details{
\code{to_long} assumes \code{data} has a column indicating site
unique identifier (i.e. a site ID column) and remaining columns are daily
measurements of a variable in question (i.e rainfall, temperature).
Remaining column names are assumed to have a prefix, a separator character,
and date in YYYYMMDD format. For example, rainfall data column names would
be something like "rf_19830325". Character strings occuring before
delimiter are not used. The character string in column names corresponding
to date are used to extract the date (YYYYMMDD).

If \code{to_long} encounters invalid dates (e.g. 30 February 1984), such
dates will be assigned a value of \code{NA} in resultant data frame and a
warning will be thrown.
}
\examples{
\dontrun{
# to_long is not exported, so we use triple-colon (:::)
rain_long <- wxsumR:::to_long(data = rain_2yr)
}

}
